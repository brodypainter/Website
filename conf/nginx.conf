
user  ec2-user;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
	worker_connections  1024;
}


http {
	include       mime.types;
	default_type  application/octet-stream;

	log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
	                  '$status $body_bytes_sent "$http_referer" '
	                  '"$http_user_agent" "$http_x_forwarded_for"';

	# access_log  logs/access.log  main;

	sendfile        on;
	#tcp_nopush     on;

	#keepalive_timeout  0;
	keepalive_timeout  65;

	#gzip  on;


	server {
		listen 80 default_server;
		server_name _;
		return 301 https://$host$request_uri;
	}

	server {
		listen	80;
		# listen 443 ssl;
		server_name		.brodypainter.com;
		root			/usr/local/nginx/html/brodyRoot;

		
		# ssl_certificate /usr/local/nginx/html/certs/brodypainter.cert.pem;
		# ssl_certificate_key /usr/local/nginx/html/certs/brodypainter.key.pem;
		# ssl_session_cache    shared:SSL:1m;
		# ssl_session_timeout  5m;

		# ssl_ciphers  HIGH:!aNULL:!MD5;
		# ssl_prefer_server_ciphers  on;

		#charset koi8-r;

		# access_log  logs/brodypainter.access.log  main;

		#error_page  404              /404.html;

		# redirect server error pages to the static page /50x.html
		#
		error_page   500 502 503 504  /50x.html;
		location = /50x.html {
			root   html;
		}

		# proxy the PHP scripts to Apache listening on 127.0.0.1:80
		#
		#location ~ \.php$ {
		#    proxy_pass   http://127.0.0.1;
		#}

		# pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
		#
		location ~ \.php$ {
			root           html;
			fastcgi_pass   127.0.0.1:9000;
			fastcgi_index  index.php;
			fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
			include        fastcgi_params;
		}

		# deny access to .htaccess files, if Apache's document root
		# concurs with nginx's one
		#
		#location ~ /\.ht {
		#    deny  all;
		#}
	}

	server {
		# listen			80;
		server_name		.newapostolicchurchphoenix.org;
		root			/usr/local/nginx/html/churchRoot;

		listen 443 ssl;
		ssl_certificate /usr/local/nginx/html/certs/nac.cert.pem;
		ssl_certificate_key /usr/local/nginx/html/certs/nac.key.pem;

		#charset koi8-r;

		# access_log  logs/nac.access.log  main;

		# location / {
		# 	#auth_basic	"Viewer Area";
		# 	#auth_basic_user_file /home/ec2-user/.htpasswd; 

		# 	root   html;
		# 	index  index.html index.htm;
		# }

		# location /brodyRoot {
		# 	root	/usr/local/nginx/html;
		# 	index	index.html;
		# }

		# location /churchRoot {
		# 	root	/usr/local/nginx/html/churchRoot;
		# 	index	index.html;
		# }

		# location /test {
		# 	root html2;
		# 	index index.html;
		# 	#proxy_pass       http://localhost:8080;
		# 	#proxy_set_header X-Real-IP $remote_addr;
		# 	#proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		# 	#proxy_set_header Host $http_host;
		# }

		error_page   500 502 503 504  /50x.html;
		location = /50x.html {
			root   html;
		}

		# pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
		#
		location ~ \.php$ {
			root           html;
			fastcgi_pass   127.0.0.1:9000;
			fastcgi_index  index.php;
			fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
			include        fastcgi_params;
		}
	}


	# another virtual host using mix of IP-, name-, and port-based configuration
	#
	#server {
	#    listen       8000;
	#    listen       somename:8080;
	#    server_name  somename  alias  another.alias;

	#    location / {
	#        root   html;
	#        index  index.html index.htm;
	#    }
	#}


	# HTTPS server
	#
	#server {
	#    listen       443 ssl;
	#    server_name  localhost;

	#    ssl_certificate      cert.pem;
	#    ssl_certificate_key  cert.key;

	#    ssl_session_cache    shared:SSL:1m;
	#    ssl_session_timeout  5m;

	#    ssl_ciphers  HIGH:!aNULL:!MD5;
	#    ssl_prefer_server_ciphers  on;

	#    location / {
	#        root   html;
	#        index  index.html index.htm;
	#    }
	#}

}

rtmp {
		server {
				listen 1935;
				chunk_size 4096;

				application live {
						live on;
						record off;
			allow play all;
				}
		}
}
